hist(temp, col="blue", main="Livingspace", xlab="m^2", freq=FALSE, breaks=10000)#, xlim = c(0, 500))
hist(temp, col="blue", main="Livingspace", xlab="m^2", freq=FALSE, breaks=10000, xlim = c(0, 500))
head(sort(temp, decreasing = FALSE), 10)
head(sort(temp, decreasing = TRUE), 10)
head(sort(temp, decreasing = FALSE), 10)
remove_ind = which(temp > 1000 & tem < 5)
remove_ind = which(temp > 1000 & temp < 5)
remove_ind = which(temp > 1000 & temp < 5)
length(remove_ind)
remove_ind = which(temp > 1000 | temp < 5)
length(remove_ind)
plot(temp, data_raw$totalRent, xlab="m^2", ylab="BC(totalRent", col="darkblue", pch=20)
temp_model = lm(data_raw$totalRent~temp)
abline(temp_model, col="red", lwd=3)
temp = temp[-remove_ind]
data_raw = data_raw[-remove_ind, ]
data_raw$livingSpace = temp
plot(temp, data_raw$totalRent, xlab="m^2", ylab="BC(totalRent", col="darkblue", pch=20)
temp_model = lm(data_raw$totalRent~temp)
abline(temp_model, col="red", lwd=3)
plot(temp, data_raw$totalRent, xlab="m^2", ylab="BC(totalRent", col="darkblue", pch=20, xlim=c(0, 300))
temp_model = lm(data_raw$totalRent~temp)
abline(temp_model, col="red", lwd=3)
cor.test(temp, data_raw$totalRent)
summary(temp_model)
plot(temp, data_raw$totalRent, xlab="m^2", ylab="BC(totalRent", col="darkblue", pch=20, xlim=c(0, 300))
temp_model = lm(data_raw$totalRent~temp)
abline(temp_model, col="red", lwd=3)
qqnorm(target_rm2, pch=0.05, frame=FALSE, ylim=c(0, 1000))
qqline(target_rm2, col="blue", lwd=2)
qqnorm(target_rm2, pch=0.05, frame=FALSE, ylim=c(0, 10000))
qqline(target_rm2, col="blue", lwd=2)
temp = data_raw$yearConstructed
head(temp, 10)
sum(is.na(temp)) / length(temp)
sum(is.na(temp))
temp = round(temp)
hist(temp, col="blue", main="Buildingyear", xlab="Year", freq=FALSE, breaks=150,  xlim=c(1000, 2020))
hist(temp, col="blue", main="Buildingyear", xlab="Year", freq=FALSE, breaks=100,  xlim=c(1000, 2020))
hist(temp, col="blue", main="Buildingyear", xlab="Year", freq=FALSE, breaks=50,  xlim=c(1000, 2020))
hist(temp, col="blue", main="Buildingyear", xlab="Year", freq=FALSE, breaks=50,  xlim=c(1000, 2020))
hist(temp, col="blue", main="Buildingyear", xlab="Year", freq=FALSE, breaks=50,  xlim=c(1000, 2020))
hist(temp, col="blue", main="Buildingyear", xlab="Year", freq=FALSE, breaks=75,  xlim=c(1000, 2020))
mirror = "http://cran.us.r-project.org"
#install.packages("moments", repos=mirror)
#install.packages("ggplot2", repos=mirror)
#install.packages("car", repos=mirror)
#install.packages("MASS", repos=mirror)
#install.packages("dummies", repos=mirror)
library("moments")
library("ggplot2")
library("car")
library("MASS")
library("dummies")
data_raw = read.csv('immo_data_raw.csv')
head(data_raw)
rental_na = which(is.na(data_raw$totalRent))
removal_fraction = length(rental_na) / length(data_raw$totalRent)
removal_fraction
data_raw = data_raw[-rental_na, ]
head(data_raw)
data_raw = subset(data_raw, select=-c(facilities, description))
head(data_raw)
#no_nas = apply(data_raw, MARGIN=2, function(x) {sum(is.na(x))})
no_nas = colSums(is.na(data_raw))
na_density = no_nas / nrow(data_raw)
na_density = na_density[order(na_density, decreasing = TRUE)]
barplot(na_density, main="NA Density all", ylab="Density", space=0.5,
col = rainbow(length(na_density)), cex.names = 0.5, las=2)
no_na = which(na_density == 0)
many_na = na_density[-no_na]
barplot(many_na, main="NA Density selected", ylab="Density", space=0.5,
col = rainbow(length(na_density)), cex.names = 0.5, las=2)
na_remove_cols = which(na_density >= 0.3)
length(na_remove_cols)
na_density[na_remove_cols]
data_raw = subset(data_raw, select=-c(telekomHybridUploadSpeed,
electricityBasePrice,
energyEfficiencyClass,
heatingCosts, petsAllowed))
head(data_raw)
target = data_raw$totalRent
hist(target, freq=FALSE, col="blue", xlab="Total Rent")
target = sort(target, decreasing=TRUE)
head(target, 10)
tail(target, 10)
high_rents = which(target > 20000)
low_rents = which(target < 200)
length(high_rents)
length(low_rents)
remove_ind = c(high_rents, low_rents)
target = target[-remove_ind]
data_raw = data_raw[-remove_ind, ]
hist(target, freq=FALSE, col="blue", xlab="Total Rent", breaks=100)
xdist = seq(min(target), max(target), length=100)
ydist = dnorm(xdist, mean(target), sd(target))
lines(xdist, ydist, col="black", lwd=2)
remove_ind_2 = c(remove_ind_2, which(data_raw$totalRent < 200))
target_rm2 = data_raw$totalRent[-remove_ind_2]
hist(target_rm2, freq=FALSE, col="blue", xlab="Total Rent", breaks=100)
xdist = seq(min(target_rm2), max(target_rm2), length=100)
ydist = dnorm(xdist, mean(target_rm2), sd(target_rm2))
lines(xdist, ydist, col="black", lwd=2)
qqnorm(target_rm2, pch=0.05, frame=FALSE, ylim=c(0, 10000))
qqline(target_rm2, col="blue", lwd=2)
skew = skewness(target_rm2)
kur = kurtosis(target_rm2)
skew
kur
log_target = log1p(target_rm2)
hist(log_target, freq=FALSE, col="blue", xlab="log(Total Rent)", breaks=100)
xdist = seq(min(log_target), max(log_target), length=100)
ydist = dnorm(xdist, mean(log_target), sd(log_target))
lines(xdist, ydist, col="black", lwd=2)
skewness(log_target)
kurtosis(log_target)
qqnorm(log_target, pch=0.05, frame=FALSE)
qqline(log_target, col="blue", lwd=2)
sqrt_target = sqrt(target_rm2)
hist(sqrt_target, freq=FALSE, col="blue", xlab="sqrt(Total Rent)", breaks=100)
xdist = seq(min(sqrt_target), max(sqrt_target), length=100)
ydist = dnorm(xdist, mean(sqrt_target), sd(sqrt_target))
lines(xdist, ydist, col="black", lwd=2)
skewness(sqrt_target)
kurtosis(sqrt_target)
bc_model = MASS::boxcox((lm(target_rm2 ~ 1)))
lambda = bc_model$x[which.max(bc_model$y)]
lambda
bc_target = (target_rm2 ** lambda - 1) / lambda
hist(bc_target, freq=FALSE, col="blue", xlab="BC(Total Rent)", breaks=100)
xdist = seq(min(bc_target), max(bc_target), length=100)
ydist = dnorm(xdist, mean(bc_target), sd(bc_target))
lines(xdist, ydist, col="black", lwd=2)
qqnorm(bc_target, pch=20, frame=FALSE)
qqline(bc_target, col="blue", lwd=2)
skewness(bc_target)
kurtosis(bc_target)
#data_raw$totalRent = log1p(data_raw$totalRent)
data_raw = data_raw[-remove_ind_2, ]
data_raw$totalRent = bc_target
names(data_raw)
no_nas_updated = colSums(is.na(data_raw))
row_nas = rowSums(is.na(data_raw))
temp = data_raw$regio1
head(temp, 10)
unique(temp)
which(is.na(temp))
temp = as.numeric(as.character(factor(temp, labels = 1:length(unique(temp)))))
hist(temp, col="blue", main="Histogram of Regio1", breaks=length(unique(temp))
, freq = FALSE, xlab="region 1")
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of regio1", xlab = "Region 1", ylab="Log(totalrent)")
data_raw$regio1 = temp
temp = data_raw$regio2
head(temp, 10)
length(unique(temp))
which(is.na(temp))
temp = as.numeric(as.character(factor(temp, labels = 1:length(unique(temp)))))
hist(temp, col="blue", main="Histogram of Regio2", breaks=50, freq = FALSE,
xlab="region2")
data_raw$regio2 = temp
temp = data_raw$regio3
head(temp, 10)
length(unique(temp))
which(is.na(temp))
data_raw = subset(data_raw, selec=-c(regio3))
temp = data_raw$serviceCharge
head(temp, 10)
length(which(is.na(temp)))
averages = aggregate(temp, list(data_raw$regio1), mean, na.rm=TRUE)
for (i in which(is.na(temp))){
for (j in 1:length(unique(data_raw$regio1))){
if (data_raw$regio1[i] == j){
temp[i] = averages[j, 2]
}
}
}
sum(is.na(temp))
plot(temp, data_raw$totalRent, type = "p", xlim = c(0, 1000),
pch=20, col="darkblue", xlab="Service Cost", ylab="BC(Rent)")
temp_model = lm(data_raw$totalRent~temp)
abline(temp_model, col="red", lwd=2)
summary(temp_model)
data_raw$serviceCharge = temp
temp = data_raw$heatingType
head(temp, 10)
unique(temp)
sum(is.na(temp))
temp[is.na(temp)] = "other"
temp = as.numeric(as.character(factor(temp, labels = 1:length(unique(temp)))))
hist(temp, las=2, freq = FALSE, col="blue", xlab="heating category",
main="HeatingType Histogram", breaks = length(unique(temp)))
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of heating type", xlab = "Heating", ylab="Log(totalrent)")
data_raw$heatingType = temp
temp = data_raw$telekomTvOffer
head(temp, 10)
unique(temp)
plot(factor(temp, exclude=NULL), col="blue", main="TV offer")
temp[is.na(temp)] = "ONE_YEAR_FREE"
temp = as.numeric(as.character(factor(temp, labels = 1:length(unique(temp)))))
data_raw$telekomTvOffer = temp
temp = data_raw$newlyConst
head(temp, 10)
unique(temp)
plot(as.factor(temp), col="blue", main="construction category")
temp = ifelse(temp == FALSE, 0, 1)
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of construction", xlab = "new/old",
ylab="Log(totalrent)")
data_raw$newlyConst = temp
temp = data_raw$balcony
head(temp, 10)
unique(temp)
plot(as.factor(temp), col="blue", xlab="balcony", ylab="number")
temp = ifelse(temp == FALSE, 0, 1)
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of balcony", xlab = "yes/no", ylab="Log(totalrent)")
data_raw$balcony = temp
temp = data_raw$picturecount
head(temp, 10)
sum(is.na(temp))
hist(temp, col="blue", breaks = length(unique(temp)), main="Number of pictures",
xlab="pictures", xlim=c(0, 60), freq=FALSE)
xdist = seq(min(temp), max(temp), length=100)
ydist = dnorm(xdist, mean(temp), sd(temp))
lines(xdist, ydist, col="black", lwd=2)
corr_spear = cor.test(temp, data_raw$totalRent, method="spearman", exact=FALSE)
corr_spear
temp = data_raw$pricetrend
head(temp, 10)
sum(is.na(temp))
averages = aggregate(temp, list(data_raw$regio1), mean, na.rm=TRUE)
for (i in which(is.na(temp))){
for (j in 1:length(unique(data_raw$regio1))){
if (data_raw$regio1[i] == j){
temp[i] = averages[j, 2]
}
}
}
sum(is.na(temp))
hist(temp, col="blue", main="Pricetrend", xlab="trend index", freq=FALSE, breaks=50)
xdist = seq(min(temp), max(temp), length=100)
ydist = dnorm(xdist, mean(temp), sd(temp))
lines(xdist, ydist, col="black", lwd=2)
skewness(temp)
kurtosis(temp)
plot(temp, data_raw$totalRent, xlab="trend index", ylab="BC(totalRent)", col="darkblue", pch=20)
temp_model = lm(data_raw$totalRent~temp)
abline(temp_model, col="red", lwd=3)
summary(temp_model)
corr = cor.test(temp, data_raw$totalRent, method="pearson")
corr
data_raw$pricetrend = temp
temp = data_raw$telekomUploadSpeed
head(temp, 10)
sum(is.na(temp))
averages = aggregate(temp, list(data_raw$regio1), mean, na.rm=TRUE)
for (i in which(is.na(temp))){
for (j in 1:length(unique(data_raw$regio1))){
if (data_raw$regio1[i] == j){
temp[i] = averages[j, 2]
}
}
}
sum(is.na(temp))
hist(temp, col="blue", main="Internetspeed", xlab="Speed", freq=FALSE, breaks=length(unique(temp)))
unique(temp)
data_raw$telekomUploadSpeed = temp
temp = data_raw$yearConstructed
head(temp, 10)
sum(is.na(temp)) / length(temp)
sum(is.na(temp))
averages = aggregate(temp, list(data_raw$regio2), mean, na.rm=TRUE)
for (i in which(is.na(temp))){
for (j in 1:length(unique(data_raw$regio2))){
if (data_raw$regio2[i] == j){
temp[i] = averages[j, 2]
}
}
}
sum(is.na(temp))
temp = round(temp)
hist(temp, col="blue", main="Buildingyear", xlab="Year", freq=FALSE, breaks=75,  xlim=c(1000, 2020))
median(temp)
temp[temp<1500]
data_raw[which(data_raw$yearConstructed==1111),]
head(sort(data_raw$yearConstructed), 50)
remove_ind = which(temp<1500)
temp = temp[-remove_ind]
cor.test(temp, data_raw$totalRent[-remove_ind])
cor.test(temp, data_raw$totalRent[-remove_ind], method="spearman")
data_raw = data_raw[-remove_ind, ]
data_raw$yearConstructed = temp
temp = data_raw$scoutId
head(temp, 10)
data_raw = subset(data_raw, select=-c(scoutId))
temp = data_raw$noParkSpaces
head(temp, 10)
unique(temp)
hist(temp[!is.na(temp)], breaks=500, col="blue", xlim=c(0, 30), xlab="no Spaces", main="parking lots per flat")
length(which(temp > 10))
remove_ind = which(temp > 10)
temp = temp[-remove_ind]
temp[is.na(temp)] = 0
hist(temp, breaks=length(unique(temp)), col="blue", xlab="no Spaces", main="parking lots per flat")
boxplot(data_raw$totalRent[-remove_ind]~temp, col="blue", stroke="red",
main="boxplot of noParkingSpaces", xlab = "no of lots", ylab="BC(totalrent)")
data_raw = data_raw[-remove_ind, ]
data_raw$noParkSpaces = temp
temp = data_raw$firingTypes
length(unique(temp))
sum(is.na(temp))
data_raw = subset(data_raw, select=-c(firingTypes))
temp = data_raw$hasKitchen
unique(temp)
sum(is.na(temp))
plot(as.factor(temp), col="blue", xlab="kitchen", ylab="number")
temp = ifelse(temp == FALSE, 0, 1)
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of kitchen", xlab = "yes/no", ylab="BC(totalrent)")
data_raw$hasKitchen = temp
temp = data_raw$geo_bln
head(temp)
data_raw = subset(data_raw, select=-c(geo_bln))
temp = data_raw$cellar
unique(temp)
sum(is.na(temp))
plot(as.factor(temp), col="blue", xlab="cellar", ylab="number", main="Cellar")
temp = ifelse(temp == FALSE, 0, 1)
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of cellar", xlab = "yes/no", ylab="BC(totalrent)")
data_raw$cellar = temp
temp = data_raw$yearConstructedRange
head(temp, 20)
unique(temp)
plot(addNA(temp), col="blue", xlab="construction bin", ylab="number")
data_raw = subset(data_raw, select=-c(yearConstructedRange))
temp = data_raw$houseNumber
head(temp, 10)
sum(is.na(temp))
data_raw = subset(data_raw, select=-c(houseNumber))
temp = data_raw$livingSpace
length(unique(temp))
sum(is.na(temp))
hist(temp, col="blue", main="Livingspace", xlab="m^2", freq=FALSE, breaks=10000, xlim = c(0, 500))
head(sort(temp, decreasing = TRUE), 10)
head(sort(temp, decreasing = FALSE), 10)
remove_ind = which(temp > 1000 | temp < 5)
length(remove_ind)
temp = temp[-remove_ind]
data_raw = data_raw[-remove_ind, ]
data_raw$livingSpace = temp
plot(temp, data_raw$totalRent, xlab="m^2", ylab="BC(totalRent)", col="darkblue", pch=20, xlim=c(0, 300))
temp_model = lm(data_raw$totalRent~temp)
abline(temp_model, col="red", lwd=3)
summary(temp_model)
cor.test(temp, data_raw$totalRent)
sqrt_target = sqrt(target_rm2)
hist(sqrt_target, freq=FALSE, col="blue", xlab="sqrt(Total Rent)", breaks=1000)
xdist = seq(min(sqrt_target), max(sqrt_target), length=100)
ydist = dnorm(xdist, mean(sqrt_target), sd(sqrt_target))
lines(xdist, ydist, col="black", lwd=2)
sqrt_target = sqrt(target_rm2)
hist(sqrt_target, freq=FALSE, col="blue", xlab="sqrt(Total Rent)", breaks=500)
xdist = seq(min(sqrt_target), max(sqrt_target), length=100)
ydist = dnorm(xdist, mean(sqrt_target), sd(sqrt_target))
lines(xdist, ydist, col="black", lwd=2)
sqrt_target = sqrt(target_rm2)
hist(sqrt_target, freq=FALSE, col="blue", xlab="sqrt(Total Rent)", breaks=200)
xdist = seq(min(sqrt_target), max(sqrt_target), length=100)
ydist = dnorm(xdist, mean(sqrt_target), sd(sqrt_target))
lines(xdist, ydist, col="black", lwd=2)
sqrt_target = sqrt(target_rm2)
hist(sqrt_target, freq=FALSE, col="blue", xlab="sqrt(Total Rent)", breaks=200, xlim=c(0, 1000))
xdist = seq(min(sqrt_target), max(sqrt_target), length=100)
ydist = dnorm(xdist, mean(sqrt_target), sd(sqrt_target))
lines(xdist, ydist, col="black", lwd=2)
sqrt_target = sqrt(target_rm2)
hist(sqrt_target, freq=FALSE, col="blue", xlab="sqrt(Total Rent)", breaks=300, xlim=c(0, 1000))
xdist = seq(min(sqrt_target), max(sqrt_target), length=100)
ydist = dnorm(xdist, mean(sqrt_target), sd(sqrt_target))
lines(xdist, ydist, col="black", lwd=2)
sqrt_target = sqrt(target_rm2)
hist(sqrt_target, freq=FALSE, col="blue", xlab="sqrt(Total Rent)", breaks=300, xlim=c(0, 800))
xdist = seq(min(sqrt_target), max(sqrt_target), length=100)
ydist = dnorm(xdist, mean(sqrt_target), sd(sqrt_target))
lines(xdist, ydist, col="black", lwd=2)
sqrt_target = sqrt(target_rm2)
hist(sqrt_target, freq=FALSE, col="blue", xlab="sqrt(Total Rent)", breaks=300, xlim=c(0, 400))
xdist = seq(min(sqrt_target), max(sqrt_target), length=100)
ydist = dnorm(xdist, mean(sqrt_target), sd(sqrt_target))
lines(xdist, ydist, col="black", lwd=2)
temp = data_raw$geo_krs
head(temp, 10)
head(data_raw$regio2, 10)
temp = data_raw$geo_krs
head(temp, 10)
head(data_raw$regio2, 10)
temp = data_raw$geo_krs
head(temp, 10)
length(unique(data_raw$regio2))
length(unique(temp))
data_raw = subset(data_raw, select=-c(geo_krs))
temp = data_raw$condition
head(temp, 10)
length(unique(temp))
sum(is.na(temp))
unique(temp)
plot(addNA(temp), col="blue", xlab="condition", ylab="number", las=2)
plot(addNA(temp), col="blue", ylab="number", las=2)
plot(addNA(temp), col="blue", main="condition distribution", cex=0.5 ,las=2)
plot(addNA(temp), col="blue", main="condition distribution", cex.names=0.5 ,las=2)
temp[is.na(temp)] = "well_kept"
con_levels = c("ripe_for_demolition","need_of_renovation", "negotiable",
"refurbished","modernized","first_time_use_after_refurbishment",
"fully_renovated", "well_kept", "mint_condition",
"first_time_use")
temp = factor(temp, ordered = TRUE, levels=con_levels)
temp
temp = as.numeric(as.character(temp))
temp
temp = data_raw$condition
head(temp, 10)
length(unique(temp))
sum(is.na(temp))
unique(temp)
plot(addNA(temp), col="blue", main="condition distribution", cex.names=0.5 ,las=2)
temp[is.na(temp)] = "well_kept"
con_levels = c("ripe_for_demolition","need_of_renovation", "negotiable",
"refurbished","modernized","first_time_use_after_refurbishment",
"fully_renovated", "well_kept", "mint_condition",
"first_time_use")
temp = factor(temp, ordered = TRUE, levels=con_levels)
temp
as.numeric(temp)
temp[is.na(temp)] = "well_kept"
con_levels = c("ripe_for_demolition","need_of_renovation", "negotiable",
"refurbished","modernized","first_time_use_after_refurbishment",
"fully_renovated", "well_kept", "mint_condition",
"first_time_use")
temp = factor(temp, ordered = TRUE, levels=con_levels)
temp = as.numeric(temp)
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of conditions", xlab = "condition category", ylab="BC(totalrent)")
data_raw$condition = temp
temp = data_raw$interiorQual
head(temp, 10)
length(unique(temp))
sum(is.na(temp))
unique(temp)
plot(addNA(temp), col="blue", main="Interiorqual", cex.names=0.5 ,las=2)
cat_probs = c(length(temp[temp=='normal']) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='sophisticated']) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='simple']) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='luxury']) / (length(temp) - sum(is.na(temp))))
cat_probs
length(temp[temp=='normal'])
length(temp[temp=='sophisticated'])
length(temp[temp=='simple'])
length(temp[temp=='luxury'])
161641+144479+89699+94629
temp[temp=='luxury']
temp[temp=='luxury' & !is.na(temp)]
cat_probs = c(length(temp[temp=='normal'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='sophisticated'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='simple'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='luxury' & !is.na(temp)]) / (length(temp) - sum(is.na(temp))))
cat_probs
sum(cat_probs)
cat_probs = c(length(temp[temp=='normal'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='sophisticated'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='simple'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='luxury' & !is.na(temp)]) / (length(temp) - sum(is.na(temp))))
fill_na = sample(c("normal","sophisticated","simple","luxury"), size=sum(is.na(temp)), replace=TRUE, prob = cat_probs    )
fill_n
fill_na
cat_probs = c(length(temp[temp=='normal'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='sophisticated'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='simple'& !is.na(temp)]) / (length(temp) - sum(is.na(temp))),
length(temp[temp=='luxury' & !is.na(temp)]) / (length(temp) - sum(is.na(temp))))
fill_na = sample(c("normal","sophisticated","simple","luxury"), size=sum(is.na(temp)), replace=TRUE, prob = cat_probs)
temp[is.na(temp)] = fill_na
plot(addNA(temp), col="blue", main="Interiorqual", cex.names=0.5 ,las=2)
sum(is.na(temp))
plot(as.factor(temp), col="blue", xlab="qual", ylab="number", main="Cellar")
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of interior quality", xlab = "quality category", ylab="BC(totalrent)")
temp = as.numeric(as.character(factor(temp, labels = 1:length(unique(temp)))))
temp
data_raw$interiorQual = temp
temp = data_raw$street
head(temp, 10)
sum(is.na(temp))
sum(temp=='no_information')
data_raw = subset(data_raw, select=-c(street))
temp = data_raw$streetPlain
head(temp, 10)
data_raw = subset(data_raw, select=-c(streetPlain))
temp = data_raw$lift
head(temp, 10)
sum(is.na(temp))
plot(as.factor(temp), col="blue", xlab="lift category", ylab="number", main="Lift")
temp = ifelse(temp == FALSE, 0, 1)
boxplot(data_raw$totalRent~temp, col="blue", stroke="red",
main="boxplot of lift", xlab = "yes/no", ylab="BC(totalrent)")
data_raw$lift = temp
temp = data_raw$typeOfFlat
head(temp, 10)
unique(temp)
sum(is.na(temp))
plot(as.factor(temp), col="blue", xlab="category", ylab="number", main="Flat Type", las=2, cex.names=0.5)
